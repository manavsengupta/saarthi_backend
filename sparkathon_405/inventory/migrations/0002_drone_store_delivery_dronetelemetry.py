# Generated by Django 5.2.1 on 2025-06-26 06:10

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('max_weight_kg', models.FloatField()),
                ('battery_capacity_mah', models.IntegerField()),
                ('current_battery_mah', models.IntegerField()),
                ('speed_kmph', models.FloatField()),
                ('max_flight_time_min', models.IntegerField()),
                ('altitude_m', models.FloatField(default=0)),
                ('status', models.CharField(choices=[('idle', 'Idle'), ('charging', 'Charging'), ('in_flight', 'In Flight'), ('maintenance', 'Maintenance'), ('offline', 'Offline')], default='idle', max_length=20)),
                ('current_lat', models.FloatField(blank=True, null=True)),
                ('current_lng', models.FloatField(blank=True, null=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('destination_lat', models.FloatField()),
                ('destination_lng', models.FloatField()),
                ('package_weight_kg', models.FloatField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('delivered', 'Delivered'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('route', models.JSONField(blank=True, null=True)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('estimated_time_min', models.FloatField(blank=True, null=True)),
                ('actual_time_min', models.FloatField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('drone', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deliveries', to='inventory.drone')),
                ('source_store', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_deliveries', to='inventory.store')),
            ],
        ),
        migrations.CreateModel(
            name='DroneTelemetry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('altitude_m', models.FloatField()),
                ('battery_mah', models.IntegerField()),
                ('speed_kmph', models.FloatField()),
                ('delivery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='inventory.delivery')),
                ('drone', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='telemetry', to='inventory.drone')),
            ],
        ),
    ]
